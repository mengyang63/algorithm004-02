package Week07;

/**
 * 题目描述
 * 评论 (318)
 * 题解(56)New
 * 提交记录
 * 编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。
 * <p>
 * <p>
 * <p>
 * 示例 1：
 * <p>
 * 输入：00000000000000000000000000001011
 * 输出：3
 * 解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。
 * 示例 2：
 * <p>
 * 输入：00000000000000000000000010000000
 * 输出：1
 * 解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。
 * 示例 3：
 * <p>
 * 输入：11111111111111111111111111111101
 * 输出：31
 * 解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。
 */
public class Solution191 {

    public static int hammingWeight(int n) {

        int ret = 0;

        //刚开始while条件设的是n>0，但是在计算第32位为1的数的时候，返回的是0。
        //这是因为第32位为1的时候，被判定为符号位，为1表示负数，不进入while循环，所以返回的是0.所以，while循环中条件改为 n!=0
        while (n != 0) {
            ret++;
            n &= (n - 1);
        }
        return ret;
    }

    public static void main(String[] args){
        int ret = hammingWeight(1);
        System.out.print(ret);
    }
}
