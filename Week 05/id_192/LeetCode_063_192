class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        if(obstacleGrid == null || obstacleGrid.length <= 0 || obstacleGrid[0][0] == 1){ return 0;}

        int toRight = obstacleGrid.length;
        int toDown = obstacleGrid[0].length;

        obstacleGrid[0][0] = 1;
        for(int i = 1 ; i < toRight; i ++){
            obstacleGrid[i][0] = (obstacleGrid[i][0] == 0 && obstacleGrid[i - 1][0] == 1) ? 1 : 0;
        }
        for(int i = 1 ; i < toDown; i ++){
            obstacleGrid[0][i] = (obstacleGrid[0][i] == 0 && obstacleGrid[0][i - 1] == 1) ? 1 : 0;
        }

        for(int i = 1 ; i < toRight; i ++){
            for(int j = 1 ; j < toDown; j ++){
                if(obstacleGrid[i][j] == 0){
                    obstacleGrid[i][j] = obstacleGrid[i - 1][j] + obstacleGrid[i][j - 1];
                }else{
                    obstacleGrid[i][j] = 0;
                }
            }
        }
        return obstacleGrid[toRight - 1][toDown - 1];
    }
}
